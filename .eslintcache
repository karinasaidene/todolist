[{"C:\\Users\\Dell\\Desktop\\todolist\\src\\index.js":"1","C:\\Users\\Dell\\Desktop\\todolist\\src\\App.js":"2","C:\\Users\\Dell\\Desktop\\todolist\\src\\reportWebVitals.js":"3","C:\\Users\\Dell\\Desktop\\todolist\\src\\addTask.js":"4"},{"size":500,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":1899,"mtime":1607179967672,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"6"},{"size":796,"mtime":1607180837081,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1c9sjqv",{"filePath":"13","messages":"14","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Dell\\Desktop\\todolist\\src\\index.js",[],["20","21"],"C:\\Users\\Dell\\Desktop\\todolist\\src\\App.js",["22","23","24"],"\nimport './App.css';\nimport React, { useState } from 'react';\nimport AddTask from './addTask';\nimport {library} from '@fortawesome/fontawesome-svg-core';\nimport{faTrash} from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faTrash);\n\nclass  App extends React.Component {\n    constructor(props){\n      super(props);\n      this.state={\n        items:[],\n        context:{\n          text:'',\n          key:''\n        }\n      }\n      this.handleInput=this.handleInput.bind(this);\n      this.addItem=this.addItem.bind(this);\n      this.deleteItems=this.deleteItems.bind(this);\n      this.setUpdate=this.setUpdate.bind(this);\n    }\n\n    handleInput(e){\n      this.setState({\n        context:{\n          text:e.target.value,\n          key:Date.now()\n        }\n      })\n    }\n    addItem(e){\n      e.preventDefault();\n      const newItem=this.state.context;\n      if (newItem.text !=\"\"){\n        const newItems=[...this.state.items,newItem]\n      this.setState({\n        items:newItems,\n        context:{\n          text:'',\n          key:''\n        }\n      })\n      }\n    }\n    deleteItems(key){\n      const filtredItems=this.state.items.filter(item=>item.key!==key);\n      this.setState({\n        items:filtredItems\n      })\n    }\n    setUpdate(text,key){\n      const items=this.state.items;\n      items.map(item=>{\n        if(item.key===key){\n          item.text=text;\n        }\n      })\n      this.setState({\n        items:items\n      })\n    }\n\nrender(){\n  return (\n    <div className=\"App\">\n      <header >\n       <form id=\"to-do-form\" onSubmit={this.addItem}>\n         <input type=\"text\"  value={this.state.context.text} placeholder=\"Enter Text\" onChange={this.handleInput} />\n         <button type=\"submit\"> Add </button>\n       </form>\n      </header>\n  <AddTask items={this.state.items} deleteItems={this.deleteItems} setUpdate={this.setUpdate}></AddTask>\n    </div>\n  );\n}\n}\n\nexport default App;\n","C:\\Users\\Dell\\Desktop\\todolist\\src\\reportWebVitals.js",[],"C:\\Users\\Dell\\Desktop\\todolist\\src\\addTask.js",[],{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","severity":1,"message":"30","line":3,"column":17,"nodeType":"31","messageId":"32","endLine":3,"endColumn":25},{"ruleId":"33","severity":1,"message":"34","line":37,"column":24,"nodeType":"35","messageId":"36","endLine":37,"endColumn":26},{"ruleId":"37","severity":1,"message":"38","line":56,"column":21,"nodeType":"39","messageId":"40","endLine":56,"endColumn":23},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]